services:
  web:
    build: .
    container_name: ultimate-website-web-prod
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - web_logs:/var/log/apache2
      - composer_cache:/root/.composer
      - storage_data:/var/www/html/storage
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=ultimate_website
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_DEBUG=false
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ultimate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  db:
    image: postgres:15-alpine
    container_name: ultimate-website-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ultimate_website
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - db_logs:/var/log/postgresql
      - ./backups:/backups
    networks:
      - ultimate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ultimate_website"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  redis:
    image: redis:7-alpine
    container_name: ultimate-website-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ultimate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: ultimate-website-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - ultimate-network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  web_logs:
    driver: local
  db_logs:
    driver: local
  composer_cache:
    driver: local
  storage_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  ultimate-network:
    driver: bridge

